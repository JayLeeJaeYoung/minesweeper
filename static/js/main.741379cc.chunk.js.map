{"version":3,"sources":["App.module.css","components/icons.js","helper/helper.js","store/index.js","components/Grid.js","components/Solution.js","components/Dashboard.js","App.js","index.js","components/Solution.module.css","components/Dashboard.module.css"],"names":["module","exports","LeftArrowIcon","xmlns","version","width","height","viewBox","preserveAspectRatio","alt","d","RightArrowIcon","MineIcon","fill","stroke","strokeDasharray","opacity","id","x","y","FlagIcon","randomIntArray","max","size","array3","Uint32Array","maxNumberAllowed","array2","length","crypto","getRandomValues","filter","map","slice","getNeighbors","row","col","node","adjacent","nodeRowNum","Math","floor","nodeColNum","neighbors","neighbor","neighborRowNum","neighborColNum","abs","push","gameSlice","createSlice","name","initialState","grid","history","status","Array","mines","isOver","violationCell","stepNum","showSolution","reducers","initialize","state","action","payload","n","ones","minesArray","i","r","temp","sum","randomMines","newStep","vioationCel","open","index","oldStep","visited","Set","queue","add","pop","has","unshift","countFlags","anyCellOpened","splice","flag","pressDown","pressUp","toggleSol","changeStep","changeAmount","store","configureStore","reducer","Cell","props","content","value","dispatch","useDispatch","isOpen","useSelector","className","classes","cell","violated","style","flex","onClick","event","actions","onContextMenu","preventDefault","onMouseDown","button","onMouseUp","icon","Grid","useEffect","flex_label","indices","keys","CellTest","GridTest","Solution","solution","Dashboard","totalSteps","dashboard","restart","App","game","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.741379cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"App_cell__2LNH2\",\"grid-container\":\"App_grid-container__zNAaw\",\"game\":\"App_game__2iTdU\",\"history\":\"App_history__1QY7H\"};","export const LeftArrowIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 82 82\"\r\n      // fill=\"currentColor\"\r\n      preserveAspectRatio=\"xMidYMid slice\"\r\n      alt=\"Arrow by Yoteyo from the Noun Project\">\r\n      <path d=\"m40.9,0c-22.6,0 -40.9,18.3 -40.9,40.9s18.3,40.9 40.9,40.9s40.9,-18.3 40.9,-40.9s-18.3,-40.9 -40.9,-40.9zm2.7,63.9l-20.3,-23l20.3,-23l14.9,4l-12.2,19l12.2,19.1l-14.9,3.9z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const RightArrowIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 82 82\"\r\n      // fill=\"currentColor\"\r\n      preserveAspectRatio=\"xMidYMid slice\"\r\n      alt=\"Arrow by Yoteyo from the Noun Project\">\r\n      <path d=\"m40.9,0c-22.6,0 -40.9,18.3 -40.9,40.9s18.3,40.9 40.9,40.9s40.9,-18.3 40.9,-40.9s-18.3,-40.9 -40.9,-40.9zm-2.7,63.9l-14.9,-4l12.2,-19l-12.2,-19.1l14.9,-4l20.3,23l-20.3,23.1z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const MineIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 60 60\"\r\n      fill=\"currentColor\"\r\n      preserveAspectRatio=\"xMidYMid slice\"\r\n      alt=\"Mine by Creaticca Creative Agency from the Noun Project\">\r\n      \\\r\n      <g>\r\n        <path\r\n          fill=\"#fff\"\r\n          stroke=\"#000\"\r\n          strokeDasharray=\"2,2\"\r\n          opacity=\"NaN\"\r\n          d=\"m17.25166,9.28808\"\r\n          id=\"svg_10\"\r\n        />\r\n        <path\r\n          d=\"m58.33,28.4l-3.38,-0.89a3.08,3.08 0 0 0 -1.25,-0.07a23.11,23.11 0 0 0 -3.4,-9.43l2.89,-4.9c0.67,-1.13 0.4,-1.79 0.06,-2.14s-1,-0.63 -2.14,0l-4.48,2.55a23.74,23.74 0 0 0 -14.15,-6.5l-1.47,-5.48c-0.36,-1.27 -1,-1.54 -1.51,-1.54l0,0c-0.49,0 -1.14,0.27 -1.49,1.54l-1.52,5.61a23.83,23.83 0 0 0 -13.31,6.59l-4.84,-2.75c-1.14,-0.65 -1.79,-0.37 -2.14,0s-0.61,1 0.06,2.14l3.17,5.34a22.71,22.71 0 0 0 -3.1,9a3.08,3.08 0 0 0 -1.25,0.08l-3.38,0.89c-1.29,0.29 -1.55,0.94 -1.55,1.43s0.27,1.14 1.54,1.48l3.32,0.86a4.64,4.64 0 0 0 1.17,0.16l0.07,0a23.13,23.13 0 0 0 2.92,9.39l-2.91,4.88c-0.67,1.14 -0.4,1.79 -0.06,2.14a1.22,1.22 0 0 0 0.9,0.37a2.55,2.55 0 0 0 1.24,-0.39l4.21,-2.4a23.71,23.71 0 0 0 14.22,7.28l1.24,4.56c0.34,1.27 1,1.53 1.49,1.53s1.14,-0.27 1.49,-1.53l1.21,-4.46a23.73,23.73 0 0 0 15.07,-7.17l3.83,2.18a2.55,2.55 0 0 0 1.24,0.39a1.22,1.22 0 0 0 0.9,-0.37c0.34,-0.35 0.61,-1 -0.06,-2.14l-2.58,-4.39a23,23 0 0 0 3.19,-9.89l0.07,0a4.64,4.64 0 0 0 1.15,-0.14l3.3,-0.87c1.28,-0.33 1.54,-1 1.54,-1.47s-0.24,-1.14 -1.52,-1.47zm-10.06,-10.89l0,0l-2.69,4.57a0.5,0.5 0 0 1 -0.88,0.11l-2.91,-2.86a0.45,0.45 0 0 1 0.11,-0.81l0.89,-0.51l7.78,-4.43l-2.3,3.93zm-3.44,-2.95l-3.46,2l-0.46,0.26l0,0l-1.74,1a1,1 0 0 0 -0.16,1.54l1.42,1.4l0,0l2.9,2.86l0,0l1.42,1.4a1,1 0 0 0 1.56,-0.21l1.25,-2.13l1.61,-2.73a21.07,21.07 0 0 1 2.62,8.13c0,0.26 0,0.52 0.07,0.78l-17.39,0a5,5 0 0 0 -4,-3.9l0,-9.09l3.07,0a1,1 0 0 0 1,-1.26l-0.53,-1.93l0,0l-1,-3.6a21.77,21.77 0 0 1 11.82,5.48zm-15.33,18.31a3,3 0 1 1 3.07,-3a3,3 0 0 1 -3.07,3zm0,-29.18l1.22,4.5l0,0l1.12,4.14l0.23,0.86l0,0a0.47,0.47 0 0 1 -0.51,0.67l-4.13,0a0.47,0.47 0 0 1 -0.51,-0.67l2.58,-9.5zm-16.66,12.18l0,0l4.71,2.68a0.45,0.45 0 0 1 0.11,0.81l-2.9,2.86a0.5,0.5 0 0 1 -0.88,-0.11l0,-0.08l-5.01,-8.44l3.97,2.28zm-2.25,4.61l2.57,4.36a1,1 0 0 0 1.56,0.21l5.76,-5.66a1,1 0 0 0 -0.21,-1.58l-5.3,-3a21.86,21.86 0 0 1 10.95,-5.56l-0.91,3.27l0,0.16l0,0l-0.52,1.93a1,1 0 0 0 1,1.26l3.07,0l0,9.1a5,5 0 0 0 -4,3.9l-16.37,0c0,-0.27 0,-0.53 0.07,-0.79a20.73,20.73 0 0 1 2.33,-7.63l0,0.03zm-5.1,9.79l-1.54,-0.4l1.63,-0.43a1,1 0 0 1 0.55,0l0,0.95l0,0a2.75,2.75 0 0 1 -0.64,-0.12zm8.38,7.39a0.59,0.59 0 0 1 0.4,-0.32l0,0a0.63,0.63 0 0 1 0.42,0.21l2.9,2.86l0,0a0.45,0.45 0 0 1 -0.11,0.81l-5.31,3l0,0l-3.29,1.92l4.99,-8.48zm0.45,7.68l4.21,-2.4l0,0l1.74,-1a1,1 0 0 0 0.21,-1.58l-5.76,-5.66a1,1 0 0 0 -1.56,0.21l-2.84,4.82a21.13,21.13 0 0 1 -2.15,-8.06c0,-0.44 0,-0.88 0,-1.31c0,-0.22 0,-0.43 0,-0.64l0,1.15l16.37,0a5,5 0 0 0 4,3.9l0,9.1l-3.11,0a1,1 0 0 0 -1,1.26l0.81,3l0.93,3.42a21.73,21.73 0 0 1 -11.85,-6.2l0,-0.01zm15.18,10.7l-1,-3.56l0,0l-1.61,-5.94a0.47,0.47 0 0 1 0.51,-0.67l4.14,0a0.47,0.47 0 0 1 0.51,0.67l-2.55,9.5zm18.1,-11.6l0,0l-5.7,-3.24a0.45,0.45 0 0 1 -0.11,-0.81l1.57,-1.52l1.35,-1.32a0.63,0.63 0 0 1 0.42,-0.21l0,0a0.59,0.59 0 0 1 0.4,0.32l0.38,0.65l4.61,7.84l-2.92,-1.71zm1.84,-4.18l-2,-3.46l-0.1,-0.17l0,0l-1,-1.72a1,1 0 0 0 -1.56,-0.21l-1.43,1.4l0,0l-1.44,1.39l-2.9,2.89a1,1 0 0 0 0.21,1.58l1.74,1l0,0l4.58,2.61a21.76,21.76 0 0 1 -12.74,6.14l1.78,-6.57a1,1 0 0 0 -1,-1.26l-3.08,0l0,-9.11a5,5 0 0 0 4,-3.9l17.37,0c0,0.27 0,0.54 0,0.82a21,21 0 0 1 -2.43,8.58l0,-0.01zm2.43,-9.39l0,-1.1c0,0.21 0,0.42 0,0.65s0.01,0.26 0,0.45zm2.65,-0.55l0,0a2.79,2.79 0 0 1 -0.63,0.1l0,-0.81s0,-0.08 0,-0.11a0.45,0.45 0 0 1 0.24,0a1.27,1.27 0 0 1 0.32,0l1.63,0.43l-1.56,0.39z\"\r\n          id=\"svg_1\"\r\n        />\r\n        <rect\r\n          fill=\"#fff\"\r\n          stroke=\"#000\"\r\n          x=\"37.6159\"\r\n          y=\"70.54636\"\r\n          width=\"0.16556\"\r\n          height=\"0\"\r\n          id=\"svg_3\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const FlagIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 60 60\"\r\n      fill=\"currentColor\"\r\n      preserveAspectRatio=\"xMidYMid slice\"\r\n      alt=\"Arrow by Yoteyo from the Noun Project\">\r\n      <g>\r\n        <path\r\n          d=\"m58.72817,3.40005a3.027,3.027 0 0 0 -2.77,-0.365a17.545,17.545 0 0 1 -5.96,0.965a22.5,22.5 0 0 1 -9.545,-1.753c-2.741,-1.054 -5.848,-2.247 -13.455,-2.247a23.568,23.568 0 0 0 -17.59,7.827a41.976,41.976 0 0 0 -1.739,-5.411a3.977,3.977 0 0 0 -5.241,-2.087a4.018,4.018 0 0 0 -2.1,5.258a38.236,38.236 0 0 1 1.609,5.377a2,2 0 0 0 -0.665,2.018l0.733,2.911a1.984,1.984 0 0 0 0.915,1.229a1.856,1.856 0 0 0 0.181,0.085a89.4,89.4 0 0 1 0.897,12.793c0,2.85 -0.138,5.691 -0.388,8.464a1.984,1.984 0 0 0 -0.812,1.283l-0.461,2.978a1.987,1.987 0 0 0 0.534,1.675a51.148,51.148 0 0 1 -2.551,10.028a4,4 0 0 0 2.091,5.239a3.985,3.985 0 0 0 5.252,-2.067a54.9,54.9 0 0 0 3.129,-12.044a38.763,38.763 0 0 1 16.206,-3.556c7.236,0 10.032,1.074 12.737,2.114a24.194,24.194 0 0 0 10.263,1.886c4.413,0 6.684,-0.925 8.48,-1.924a2.979,2.979 0 0 0 1.52,-2.61l0,-35.62a2.953,2.953 0 0 0 -1.27,-2.446zm-56.566,1.391a2.009,2.009 0 0 1 1.057,-2.625a1.978,1.978 0 0 1 2.611,1.034a43.081,43.081 0 0 1 1.885,6.09l-3.887,0.984a38.481,38.481 0 0 0 -1.666,-5.483zm1.781,10.609l-0.732,-2.9l4.941,-1.25q0.313,1.491 0.562,2.953l-4.771,1.197zm0.373,27.617a0.464,0.464 0 0 1 0.1,0.038a0.774,0.774 0 0 0 -0.1,-0.036l0,-0.002zm1.512,13.783a2,2 0 0 1 -3.673,-1.576a51.357,51.357 0 0 0 2.623,-10.109l3.958,0.609a51.671,51.671 0 0 1 -2.908,11.076zm3.212,-13.053l-4.724,-0.726l0.459,-2.962l4.641,0.713q-0.171,1.557 -0.376,2.975zm0.573,-4.968l-3.976,-0.611c0.229,-2.684 0.361,-5.42 0.361,-8.168a91.57,91.57 0 0 0 -0.887,-12.827l3.908,-0.989a95.858,95.858 0 0 1 0.979,13.816c0,2.95 -0.135,5.9 -0.385,8.779zm48.385,2.687a0.979,0.979 0 0 1 -0.492,0.862c-1.561,0.872 -3.551,1.672 -7.508,1.672a22.5,22.5 0 0 1 -9.545,-1.753c-2.741,-1.054 -5.848,-2.247 -13.455,-2.247a41.054,41.054 0 0 0 -15.86,3.2q0.177,-1.32 0.327,-2.741a16.175,16.175 0 0 0 5.533,-12.459c0,-7.473 -4.955,-12.436 -6.214,-13.577c-0.224,-1.378 -0.487,-2.753 -0.795,-4.17a21.838,21.838 0 0 1 17.009,-8.253c7.236,0 10.032,1.074 12.737,2.114a24.194,24.194 0 0 0 10.263,1.886a19.535,19.535 0 0 0 6.639,-1.085a1.023,1.023 0 0 1 0.943,0.121a0.976,0.976 0 0 1 0.418,0.81l0,35.62zm-46.719,-23.54a16.49,16.49 0 0 1 3.719,10.074a14.444,14.444 0 0 1 -3.26,9.337c0.171,-2.421 0.26,-4.879 0.26,-7.338a99.773,99.773 0 0 0 -0.719,-12.073z\"\r\n          id=\"svg_1\"\r\n        />\r\n        <path\r\n          d=\"m49.1619,17.05836c0,-5.514 -5.832,-10 -13,-10s-13,4.486 -13,10a23.35,23.35 0 0 0 0.707,5.886a1.066,1.066 0 0 1 -0.123,0.763a4.989,4.989 0 0 0 1.157,6.092a5.281,5.281 0 0 0 3.259,1.259l0,2.581a3,3 0 0 0 2.475,2.954a33.062,33.062 0 0 0 11.051,0a3,3 0 0 0 2.474,-2.957l0,-2.572a4.436,4.436 0 0 0 3.9,-1.736a5.271,5.271 0 0 0 0.514,-5.618a1.085,1.085 0 0 1 -0.124,-0.767a23.342,23.342 0 0 0 0.71,-5.885zm-2.737,11.125a2.7,2.7 0 0 1 -2.346,0.875a1.861,1.861 0 0 0 -1.351,0.5a1.839,1.839 0 0 0 -0.566,1.33l0,2.748a1,1 0 0 1 -0.825,0.985a30.941,30.941 0 0 1 -10.349,0a1,1 0 0 1 -0.826,-0.985l0,-2.748a1.846,1.846 0 0 0 -1.847,-1.83a3.29,3.29 0 0 1 -2.114,-0.78a3.015,3.015 0 0 1 -0.688,-3.632a3.058,3.058 0 0 0 0.292,-2.208a21.3,21.3 0 0 1 -0.643,-5.38c0,-4.411 4.935,-8 11,-8s11,3.589 11,8a21.309,21.309 0 0 1 -0.643,5.38a3.069,3.069 0 0 0 0.292,2.207l0,0a3.255,3.255 0 0 1 -0.386,3.538z\"\r\n          id=\"svg_2\"\r\n        />\r\n        <path\r\n          d=\"m35.1619,23.55836a3.779,3.779 0 0 0 -4,-3.5a3.779,3.779 0 0 0 -4,3.5a3.779,3.779 0 0 0 4,3.5a3.779,3.779 0 0 0 4,-3.5zm-4,1.5c-1.084,0 -2,-0.687 -2,-1.5s0.916,-1.5 2,-1.5s2,0.687 2,1.5s-0.916,1.5 -2,1.5z\"\r\n          id=\"svg_3\"\r\n        />\r\n        <path\r\n          d=\"m41.1619,20.05836a3.779,3.779 0 0 0 -4,3.5a3.779,3.779 0 0 0 4,3.5a3.779,3.779 0 0 0 4,-3.5a3.779,3.779 0 0 0 -4,-3.5zm0,5c-1.084,0 -2,-0.687 -2,-1.5s0.916,-1.5 2,-1.5s2,0.687 2,1.5s-0.916,1.5 -2,1.5z\"\r\n          id=\"svg_4\"\r\n        />\r\n        <path\r\n          d=\"m37.11324,26.50336a1.039,1.039 0 0 0 -1.664,0l-2,3a1,1 0 0 0 1.664,1.11l1.168,-1.755l1.168,1.752a1,1 0 1 0 1.664,-1.11l-2,-2.997z\"\r\n          id=\"svg_5\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","/**\r\n * rough algorithm borrowed from https://github.com/joepie91/node-random-number-csprng/blob/master/src/index.js\r\n *\r\n * @param {integer} max - maximum number, inclusive (must be strictly less than 2**32)\r\n * @param {integer} size - size of the array (must be at least 1)\r\n * @returns a random integer array in the range [0, max] using crypto.getRandomValues()\r\n */\r\nconst randomIntArray = (max, size) => {\r\n  let array3 = new Uint32Array(size * 2); // double the size to make room for filtering\r\n  // cutting off extra big numbers that contribute to bias so that each number\r\n  // gets the same distribution after modulus operation\r\n  const maxNumberAllowed = 2 ** 32 - (2 ** 32 % (max + 1)) - 1; // inclusive\r\n\r\n  let array2 = [];\r\n  while (array2.length < size) {\r\n    crypto.getRandomValues(array3);\r\n    array2 = array3.filter((x) => x <= maxNumberAllowed);\r\n  }\r\n  const array = array2.map((x) => x % (max + 1)).slice(0, size);\r\n  return array;\r\n};\r\n\r\n/**\r\n * @param {integer} row - number of rows\r\n * @param {integer} col - number of columns\r\n * @param {integer} node - index number of the center node (note the grid is represented in 1D array)\r\n * @returns an array of indices representing the neighbor indices of the center node\r\n */\r\nexport const getNeighbors = (row, col, node) => {\r\n  const adjacent = [-col - 1, -col, -col + 1, -1, 1, col - 1, col, col + 1];\r\n  const nodeRowNum = Math.floor(node / col);\r\n  const nodeColNum = node % col;\r\n  const neighbors = [];\r\n  for (const d of adjacent) {\r\n    const neighbor = node + d;\r\n    if (neighbor < 0 || neighbor >= row * col) continue;\r\n    const neighborRowNum = Math.floor(neighbor / col);\r\n    const neighborColNum = neighbor % col;\r\n    if (\r\n      Math.abs(nodeRowNum - neighborRowNum) > 1 ||\r\n      Math.abs(nodeColNum - neighborColNum) > 1\r\n    ) {\r\n      continue;\r\n    }\r\n    neighbors.push(neighbor);\r\n  }\r\n  return neighbors;\r\n};\r\n\r\n/**\r\n *\r\n * @param {integer} row\r\n * @param {integer} col\r\n * @param {integer} mines - total number of mines\r\n * @returns a 1D grid where -1 represents mines and positive numbers are the # of mines in its neighbors\r\n */\r\nexport const randomMines = (row, col, mines) => {\r\n  // create 1D array\r\n  const n = row * col;\r\n  const ones = new Array(mines).fill(-1);\r\n  let minesArray = new Array(n - mines).fill(0);\r\n  minesArray.push(...ones);\r\n\r\n  // shuffle algorithm based on COS226 by Kevin Wayne at Princeton\r\n  for (let i = 0; i < n; i++) {\r\n    let r = i + randomIntArray(n - i - 1, 1)[0];\r\n    const temp = minesArray[r];\r\n    minesArray[r] = minesArray[i];\r\n    minesArray[i] = temp;\r\n  }\r\n\r\n  // add number of mines nearby\r\n  for (let i = 0; i < n; i++) {\r\n    if (minesArray[i] === -1) continue;\r\n    const neighbors = getNeighbors(row, col, i);\r\n    let sum = 0;\r\n    for (const neighbor of neighbors) {\r\n      if (minesArray[neighbor] === -1) sum++;\r\n    }\r\n    minesArray[i] = sum;\r\n  }\r\n\r\n  return minesArray;\r\n};\r\n","import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nimport { getNeighbors, randomMines } from \"../helper/helper\";\r\n\r\n// violationCell: -1 if no violation\r\n// status: // 0 for opened (clicked and determined), 1 for closed (i.e. not yet clicked), -1 for flagged, 2 for close pressed\r\nexport const gameSlice = createSlice({\r\n  name: \"game\",\r\n  initialState: {\r\n    row: 0,\r\n    col: 0,\r\n    grid: [],\r\n    history: [\r\n      {\r\n        status: new Array(1).fill(1),\r\n        mines: 0,\r\n        isOver: false,\r\n        violationCell: -1,\r\n      },\r\n    ],\r\n    stepNum: 0,\r\n    showSolution: false,\r\n  },\r\n  reducers: {\r\n    initialize(state, action) {\r\n      const [row, col, mines] = action.payload;\r\n      state.row = row;\r\n      state.col = col;\r\n      state.grid = randomMines(row, col, mines);\r\n      // state.grid = [\r\n      //   0, 1, -1, 2, 1, 2, -1, 1, 1, 2, 2, 3, -1, 3, 1, 1, 1, -1, 1, 2, -1, 2,\r\n      //   1, 1, 2, 2, 3, 2, 2, 2, 2, -1, 1, -1, 3, -1, 2, 2, -1, 4, 1, 1, 3, -1,\r\n      //   2, 2, -1, -1, 1, 1, 1, 1, 1, 1, 3, 3, -1, 1, 0, 0, 0, 0, 1, -1,\r\n      // ];\r\n\r\n      const n = row * col;\r\n      const newStep = {\r\n        status: new Array(n).fill(1),\r\n        mines: mines,\r\n        isOver: false,\r\n        vioationCel: -1,\r\n      };\r\n      state.history = [];\r\n      state.history.push(newStep);\r\n\r\n      state.stepNum = 0;\r\n      state.showSolution = false;\r\n    },\r\n    open(state, action) {\r\n      const index = action.payload;\r\n      // const newStatus = state.steps[state.stepNum].slice();\r\n      const oldStep = state.history[state.stepNum];\r\n      const newStep = {\r\n        status: oldStep.status.slice(),\r\n        mines: oldStep.mines,\r\n        isOver: oldStep.isOver,\r\n        violationCell: oldStep.violationCell,\r\n      };\r\n\r\n      const n = state.row * state.col;\r\n      const row = state.row;\r\n      const col = state.col;\r\n      // return if flagged (-1)\r\n      if (newStep.status[index] === -1) return;\r\n      // if a closed cell, open\r\n      else if (newStep.status[index] > 0) {\r\n        newStep.status[index] = 0;\r\n\r\n        // if mine, reveal all the mines and end the game\r\n        if (state.grid[index] === -1) {\r\n          newStep.violationCell = index;\r\n          for (let i = 0; i < n; i++) {\r\n            if (state.grid[i] === -1) newStep.status[i] = 0;\r\n          }\r\n          newStep.isOver = true;\r\n        }\r\n        // if zero, then BFS to open all zeros connected\r\n        else if (state.grid[index] === 0) {\r\n          const visited = new Set();\r\n          const queue = [index];\r\n          visited.add(index);\r\n          while (queue.length !== 0) {\r\n            const node = queue.pop();\r\n            const neighbors = getNeighbors(row, col, node);\r\n            for (const neighbor of neighbors) {\r\n              if (visited.has(neighbor)) continue;\r\n              if (state.grid[neighbor] === 0) queue.unshift(neighbor);\r\n              visited.add(neighbor);\r\n              newStep.status[neighbor] = 0; // open\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // if open, either do nothing or open cells based on flag matches\r\n      else if (newStep.status[index] === 0) {\r\n        // check if the number on the cell matches the flags\r\n        let countFlags = 0;\r\n        const neighbors = getNeighbors(row, col, index);\r\n        for (const neighbor of neighbors) {\r\n          if (newStep.status[neighbor] === -1) countFlags++;\r\n        }\r\n        if (state.grid[index] !== countFlags) return; // if number does not match, return\r\n\r\n        // open all neighbors\r\n        // same code as before ... probably good idea to refactor later\r\n        let anyCellOpened = false;\r\n        for (const neighbor of neighbors) {\r\n          if (newStep.status[neighbor] < 1) continue;\r\n\r\n          // open all neighbors\r\n          newStep.status[neighbor] = 0;\r\n          anyCellOpened = true;\r\n\r\n          // if mine, reveal all the mines and end the game\r\n          if (state.grid[neighbor] === -1) {\r\n            newStep.violationCell = neighbor;\r\n            for (let i = 0; i < n; i++) {\r\n              if (state.grid[i] === -1) newStep.status[i] = 1;\r\n            }\r\n            newStep.isOver = true;\r\n          }\r\n          // if zero, then BFS to open all zeros connected\r\n          else if (state.grid[index] === 0) {\r\n            const visited = new Set();\r\n            const queue = [index];\r\n            visited.add(index);\r\n            while (queue.length !== 0) {\r\n              const node = queue.pop();\r\n              const neighbors = getNeighbors(row, col, node);\r\n              for (const neighbor of neighbors) {\r\n                if (visited.has(neighbor)) continue;\r\n                if (state.grid[neighbor] === 0) queue.unshift(neighbor);\r\n                visited.add(neighbor);\r\n                newStep.status[neighbor] = 0; // open\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (!anyCellOpened) return; // if no change has been made, return\r\n      }\r\n      if (newStep.mines === 0) {\r\n        newStep.isOver = true;\r\n        for (let i = 0; i < n; i++) {\r\n          if (newStep.status[i] === 1) newStep.status[i] = 0;\r\n        }\r\n      }\r\n      state.stepNum++;\r\n      state.history.splice(state.stepNum, state.history.length, newStep);\r\n    },\r\n\r\n    flag(state, action) {\r\n      const index = action.payload;\r\n\r\n      const oldStep = state.history[state.stepNum];\r\n      const newStep = {\r\n        status: oldStep.status.slice(),\r\n        mines: oldStep.mines,\r\n        isOver: oldStep.isOver,\r\n        violationCell: oldStep.violationCell,\r\n      };\r\n      if (newStep.status[index] === 0) return; // return if open (0)\r\n      if (newStep.status[index] === 1) {\r\n        // if close, change to flag\r\n        newStep.status[index] = -1;\r\n        newStep.mines--;\r\n        // if (newStep.mines === 0) newStep.isOver = true;\r\n      } else if (newStep.status[index] === -1) {\r\n        // if flag, change to close\r\n        newStep.status[index] = 1;\r\n        newStep.mines++;\r\n      }\r\n      state.stepNum++;\r\n      state.history.splice(state.stepNum, state.history.length, newStep);\r\n    },\r\n\r\n    pressDown(state, action) {\r\n      const index = action.payload;\r\n      const newStep = state.history[state.stepNum];\r\n\r\n      if (newStep.status[index] === 1) {\r\n        // if cell is closed\r\n        newStep.status[index] = 2;\r\n      } else if (newStep.status[index] === 0) {\r\n        // if cell is open\r\n        const neighbors = getNeighbors(state.row, state.col, index);\r\n        for (const neighbor of neighbors) {\r\n          if (newStep.status[neighbor] === 1) newStep.status[neighbor] = 2;\r\n        }\r\n      } else return;\r\n    },\r\n\r\n    pressUp(state, action) {\r\n      const index = action.payload;\r\n      const newStep = state.history[state.stepNum];\r\n\r\n      if (newStep.status[index] === 2) {\r\n        // if cell is closed-pressed\r\n        newStep.status[index] = 1;\r\n      } else if (newStep.status[index] === 0) {\r\n        // if cell is open\r\n        const neighbors = getNeighbors(state.row, state.col, index);\r\n        for (const neighbor of neighbors) {\r\n          if (newStep.status[neighbor] === 2) newStep.status[neighbor] = 1;\r\n        }\r\n      } else return;\r\n    },\r\n\r\n    toggleSol(state) {\r\n      state.showSolution = !state.showSolution;\r\n    },\r\n\r\n    changeStep(state, action) {\r\n      const changeAmount = action.payload;\r\n      state.stepNum = state.stepNum + changeAmount;\r\n    },\r\n  },\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: gameSlice.reducer,\r\n});\r\n","import { MineIcon, FlagIcon } from \"./icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { gameSlice } from \"../store\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport classes from \"./Solution.module.css\";\r\n\r\nconst Cell = (props) => {\r\n  let content = \"\";\r\n  if (props.action === -1) {\r\n    content = <FlagIcon />;\r\n  } else if (props.action === 0 && props.value === -1) {\r\n    content = <MineIcon />;\r\n  } else if (props.action === 0 && props.value !== 0) {\r\n    content = props.value;\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  // open (0) or close-pressed (2) is considered \"cell-open\" for styling\r\n  const isOpen = props.action % 2 === 0 ? \"cell-open\" : \"cell-close\";\r\n  const isOver = useSelector((state) => state.history[state.stepNum].isOver);\r\n\r\n  const onClickHandler = (event) => {\r\n    if (isOver) return;\r\n    dispatch(gameSlice.actions.open(props.id));\r\n  };\r\n\r\n  const onContextMenuHandler = (event) => {\r\n    event.preventDefault();\r\n    if (isOver) return;\r\n    dispatch(gameSlice.actions.flag(props.id));\r\n  };\r\n\r\n  const onMouseDownHandler = (event) => {\r\n    if (isOver) return;\r\n    // fire only when left/middle click\r\n    if (event.button <= 1) {\r\n      dispatch(gameSlice.actions.pressDown(props.id));\r\n    }\r\n  };\r\n\r\n  const onMouseUpHandler = (event) => {\r\n    if (isOver) return;\r\n    // fire only when left/middle click\r\n    if (event.button <= 1) {\r\n      dispatch(gameSlice.actions.pressUp(props.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`${classes.cell} ${classes[isOpen]} ${\r\n        props.violated && classes.violated\r\n      }`}\r\n      style={{ flex: props.flex }}\r\n      onClick={onClickHandler}\r\n      onContextMenu={onContextMenuHandler}\r\n      onMouseDown={onMouseDownHandler}\r\n      onMouseUp={onMouseUpHandler}>\r\n      <span className={classes.icon}>{content}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const Grid = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // runs once at first render\r\n  useEffect(() => {\r\n    const initialRow = 8;\r\n    const initialCol = 8;\r\n    const initialMines = 15;\r\n    dispatch(\r\n      gameSlice.actions.initialize([initialRow, initialCol, initialMines])\r\n    );\r\n  }, [dispatch]);\r\n\r\n  const row = useSelector((state) => state.row);\r\n  const col = useSelector((state) => state.col);\r\n  const flex_label = 100 / col + \"%\";\r\n\r\n  const grid = useSelector((state) => state.grid);\r\n  const stepNum = useSelector((state) => state.stepNum);\r\n  const newStep = useSelector((state) => state.history[stepNum].status);\r\n\r\n  const violationCell = useSelector(\r\n    (state) => state.history[stepNum].violationCell\r\n  );\r\n\r\n  const indices = [...Array(row * col).keys()];\r\n  return (\r\n    <div className={classes.grid}>\r\n      {indices.map((i) => (\r\n        <Cell\r\n          key={i}\r\n          id={i}\r\n          value={grid[i]}\r\n          action={newStep[i]}\r\n          flex={flex_label}\r\n          violated={violationCell === i}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classes from \"./Solution.module.css\";\r\nimport { MineIcon } from \"./icons\";\r\nimport { gameSlice } from \"../store\";\r\n\r\nconst CellTest = (props) => {\r\n  let content = props.value;\r\n  if (props.value === -1) {\r\n    content = <MineIcon />;\r\n  }\r\n  const isOpen = props.action % 2 === 0 ? \"cell-open\" : \"cell-close\";\r\n\r\n  return (\r\n    <button\r\n      className={`${classes.cell} ${classes[isOpen]}`}\r\n      style={{ flex: props.flex }}>\r\n      <span className={classes.icon}>{content}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nconst GridTest = () => {\r\n  const row = useSelector((state) => state.row);\r\n  const col = useSelector((state) => state.col);\r\n  const flex_label = 100 / col + \"%\";\r\n\r\n  const grid = useSelector((state) => state.grid);\r\n  const stepNum = useSelector((state) => state.stepNum);\r\n  const newStep = useSelector((state) => state.history[stepNum].status);\r\n\r\n  const indices = [...Array(row * col).keys()];\r\n  return (\r\n    <div className={classes.grid}>\r\n      {indices.map((i) => (\r\n        <CellTest\r\n          key={i}\r\n          id={i}\r\n          value={grid[i]}\r\n          action={newStep[i]}\r\n          flex={flex_label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Solution = () => {\r\n  const showSolution = useSelector((state) => state.showSolution);\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickHandler = () => {\r\n    dispatch(gameSlice.actions.toggleSol());\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button className={classes.solution} onClick={onClickHandler}>\r\n        {showSolution ? \"Hide Solution\" : \"Show Solution\"}\r\n      </button>\r\n      {showSolution && <GridTest />}\r\n    </Fragment>\r\n  );\r\n};\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport classes from \"./Dashboard.module.css\";\r\nimport { gameSlice } from \"../store\";\r\nimport { LeftArrowIcon, RightArrowIcon } from \"./icons\";\r\n\r\nexport const Dashboard = (props) => {\r\n  const dispatch = useDispatch();\r\n  const stepNum = useSelector((state) => state.stepNum);\r\n  const mines = useSelector((state) => state.history[stepNum].mines);\r\n  const totalSteps = useSelector((state) => state.history.length);\r\n\r\n  const onRestartClick = (event) => {\r\n    const initialRow = 8;\r\n    const initialCol = 8;\r\n    const initialMines = 15;\r\n    dispatch(\r\n      gameSlice.actions.initialize([initialRow, initialCol, initialMines])\r\n    );\r\n  };\r\n\r\n  const onLeftClick = () => {\r\n    if (stepNum === 0) return;\r\n    dispatch(gameSlice.actions.changeStep(-1));\r\n  };\r\n\r\n  const onRightClick = () => {\r\n    if (stepNum === totalSteps - 1) return;\r\n    dispatch(gameSlice.actions.changeStep(1));\r\n  };\r\n\r\n  return (\r\n    <header className={classes.dashboard}>\r\n      <div className={classes[\"mines-container\"]}>\r\n        <h4>mines: </h4>\r\n        <div className={classes.mines}>{mines}</div>\r\n      </div>\r\n      <button className={classes.restart} onClick={onRestartClick}>\r\n        New Game!\r\n      </button>\r\n      <div className={classes[\"history-container\"]}>\r\n        <div\r\n          className={`${classes.icon} ${\r\n            stepNum === 0 && classes[\"icon-disable\"]\r\n          }`}\r\n          onClick={onLeftClick}>\r\n          <LeftArrowIcon />\r\n        </div>\r\n        <div>{stepNum}</div>\r\n        <div\r\n          className={`${classes.icon} ${\r\n            stepNum === totalSteps - 1 && classes[\"icon-disable\"]\r\n          }`}\r\n          onClick={onRightClick}>\r\n          <RightArrowIcon />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import { Grid } from \"./components/Grid\";\nimport { Solution } from \"./components/Solution\";\nimport { Dashboard } from \"components/Dashboard\";\nimport classes from \"./App.module.css\";\n\nconst App = () => {\n  return (\n    <div className={classes.game}>\n      <Dashboard />\n      <Grid />\n      <br />\n      <Solution />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport { store } from \"./store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"solution\":\"Solution_solution__P7dDN\",\"grid\":\"Solution_grid__13zcD\",\"cell\":\"Solution_cell__2JycR\",\"cell-open\":\"Solution_cell-open__eHh2R\",\"cell-close\":\"Solution_cell-close__3N2XF\",\"violated\":\"Solution_violated__1ElNn\",\"icon\":\"Solution_icon__3_QX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__2Obpj\",\"mines-container\":\"Dashboard_mines-container__iHryo\",\"mines\":\"Dashboard_mines__mgBy8\",\"restart\":\"Dashboard_restart__2NMc2\",\"history-container\":\"Dashboard_history-container__198jk\",\"icon\":\"Dashboard_icon__1E_ID\",\"icon-disable\":\"Dashboard_icon-disable__18nGj\"};"],"sourceRoot":""}